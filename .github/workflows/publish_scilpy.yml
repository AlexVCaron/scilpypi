name: Build

on:
  release:
    types: [published]

jobs:
  build_wheels:
    permissions:
      contents: write

    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04]

    steps:
      - name: Save workspaces path
        id: workspace
        run: echo "path=${GITHUB_WORKSPACE}" >> $GITHUB_OUTPUT

      - name: Checkout Scilpy 
        uses: actions/checkout@v4
        with:
          repository: scilus/scilpy
          ref: ${{ github.ref_name }}
          path: ${{ steps.workspace.outputs.path }}/scilpy

      - name: Checkout Scilpypi
        uses: actions/checkout@v4
        with:
          path: ${{ steps.workspace.outputs.path }}/scilpypi

      - name: Patch scilpy requirements
        run: |
          cp ${{ steps.workspace.outputs.path }}/scilpypi/scilpy-requirements.txt.fix ${{ steps.workspace.outputs.path }}/scilpy/requirements.txt
          cp ${{ steps.workspace.outputs.path }}/scilpypi/.python-version.fix ${{ steps.workspace.outputs.path }}/scilpy/.python-version
          cp ${{ steps.workspace.outputs.path }}/scilpypi/version.py.fix ${{ steps.workspace.outputs.path }}/scilpy/scilpy/version.py

      - name: Create source distribution for Scilpy
        run: pipx run build --sdist --outdir ${{ steps.workspace.outputs.path }}/sdist ${{ steps.workspace.outputs.path }}/scilpy

      # Once we have aarch64 vtk wheels, we can reinstate this to build scilpy wheels for aarch64
      #- name: Set up QEMU
      #  if: runner.os == 'Linux'
      #  uses: docker/setup-qemu-action@v3
      #  with:
      #    platforms: all

      - name: Build wheels for Scilpy
        uses: pypa/cibuildwheel@v2.16.2
        with:
          package-dir: ${{ steps.workspace.outputs.path }}/scilpy
          output-dir: ${{ steps.workspace.outputs.path }}/wheelhouse
          config-file: ${{ steps.workspace.outputs.path }}/scilpypi/cibuildwheel.toml
        env:
          CIBW_ARCHS_LINUX: auto

      - name: Upload wheels and source to artifacts
        uses: actions/upload-artifact@v3
        with:
          path: |
            ${{ steps.workspace.outputs.path }}/wheelhouse/*.whl
            ${{ steps.workspace.outputs.path }}/sdist/*.tar.gz

      - name: Get release information from Scilpy release
        id: scilpy-release-info
        uses: cardinalby/git-get-release-action@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          repo: scilus/scilpy
          tag: ${{ github.ref_name }}
          doNotFailIfNotFound: true

      - name: Add wheels and sdist to release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          body: |
            # Wheels and Source Distribution for Scilpy ${{ github.ref_name }}.

            ${{ steps.scilpy-release-info.outputs.body }}
          files: |
            ${{ steps.workspace.outputs.path }}/sdist/*.tar.gz
            ${{ steps.workspace.outputs.path }}/wheelhouse/*.whl
